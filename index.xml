<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sikkerhet.bouvet.no on Sikkerhet.bouvet.no - For Security Champions in Bouvet</title><link>https://sikkerhet.bouvet.no/</link><description>Recent content in sikkerhet.bouvet.no on Sikkerhet.bouvet.no - For Security Champions in Bouvet</description><generator>Hugo</generator><language>en</language><atom:link href="https://sikkerhet.bouvet.no/index.xml" rel="self" type="application/rss+xml"/><item><title>Bouvet Security Champion</title><link>https://sikkerhet.bouvet.no/security-champion/what-is-a-security-champion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/security-champion/what-is-a-security-champion/</guid><description>&lt;h2 id="why-security-champion">Why &amp;ldquo;Security Champion&amp;rdquo;&lt;a class="td-heading-self-link" href="#why-security-champion" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>The term &amp;ldquo;Security Champion&amp;rdquo; has become an established concept to encompass people who do not necessarily work directly with security but can act as a bridge between formal security roles and development teams.&lt;/p>
&lt;p>There are many ways to implement a Security Champion program; OWASP has a &lt;a href="https://owasp.org/www-project-security-culture/stable/4-Security_Champions/">relatively comprehensive list&lt;/a> of points for a program where Security Champions have a more formal role. At Bouvet, we have chosen a different solution inspired by &lt;a href="https://sikkerhet.nav.no/docs/bli-security-champion/">NAV&lt;/a> and &lt;a href="https://equinor.github.io/appsec/security-champion/">Equinor&lt;/a> where it is more informal, and each person can contribute as much as they can and have the capacity for.&lt;/p></description></item><item><title>CI/CD</title><link>https://sikkerhet.bouvet.no/deploy/cicd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/deploy/cicd/</guid><description>&lt;p>When setting up runtime environments, it is important to consider how the solution we are developing can be built and deployed in a way that makes it easy and removes the need for a person to spend time and energy doing the same thing each time.&lt;/p>

&lt;figure>
 &lt;img src="../cicd.png"/> 
&lt;/figure>

&lt;h2 id="using-cicd">Using CI/CD&lt;a class="td-heading-self-link" href="#using-cicd" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Continuous Integration and Continuous Delivery, often abbreviated as CI/CD, are common approaches for how software is built and deployed to runtime environments, often using scripts in the form of pipelines or actions. Names and terms here depend on the tools used, but the principle is much the same.&lt;/p></description></item><item><title>Development Environment, Tools, and Build Environment</title><link>https://sikkerhet.bouvet.no/develop/dev_environments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/develop/dev_environments/</guid><description>&lt;p>The development environment and build environment are some of the most important aspects of a development project, and it is crucial that we have control over these dependencies.&lt;/p>
&lt;p>There are many different ways to approach these environments; some develop and build locally on their own laptop, while others use a combination of dedicated development and build environments - based on cloud services like Azure DevBox or on-prem development servers.&lt;/p>
&lt;p>Regardless of the solution chosen, there are some important points that should be documented and maintained - both to have a basis that can be threat modeled and validated, but also so that new team members can quickly onboard and get a &amp;ldquo;right&amp;rdquo; environment.&lt;/p></description></item><item><title>Introduction</title><link>https://sikkerhet.bouvet.no/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/introduction/</guid><description>&lt;p>The goal of &lt;strong>sikkerhet.bouvet.no&lt;/strong> is not to cover everything, but to give you suggestions for measures and a vocabulary that will help you move forward. All topics presented will also point to external resources that can provide even more information.&lt;/p>
&lt;p>Bouvet is &lt;a href="https://www.bouvet.no/om-bouvet/vare-iso-sertifiseringer">certified under ISO27001&lt;/a>, which also sets requirements for security in deliveries. The &lt;a href="https://sikkerhet.bouvet.no/checklist/">checklist&lt;/a> will provide you with a good starting point for measures that cover common security gaps and help ensure quality in the delivery. Each point in the checklist is covered by more detailed information to make it easy to get started without prior knowledge of a topic.&lt;/p></description></item><item><title>Roles and responsibilities</title><link>https://sikkerhet.bouvet.no/plan/roles-and-responsibilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/plan/roles-and-responsibilities/</guid><description>&lt;p>Bouvet conducts development projects in many different ways, where we take more or less responsibility for project management, planning, development, quality assurance, and not least the operation and management of the solution. We also involve our own, the client&amp;rsquo;s, and third-party equipment both during development and management of the solution.&lt;/p>
&lt;p>Regardless of how the project is executed, it is important that we are aware of how responsibilities are divided. This should be regulated in the agreement with the client, so we must ensure that we:&lt;/p></description></item><item><title>Security Requirements</title><link>https://sikkerhet.bouvet.no/design/security-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/design/security-requirements/</guid><description>&lt;p>Some requirements are implicit, such as the use of HTTPS/TLS, while others will be explicit and defined by customers or third parties. Even if the customer has no specific requirements, it is still important for the delivery team to create a list of requirements to ensure that the project&amp;rsquo;s framework is documented.&lt;/p>
&lt;p>Most projects must adhere to various requirements from Bouvet, the customer, and external parties. All development teams must have control over the requirements that apply to the delivery:&lt;/p></description></item><item><title>Verify the Design</title><link>https://sikkerhet.bouvet.no/manage/verify-the-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/manage/verify-the-design/</guid><description>&lt;p>When we create a &lt;a href="https://sikkerhet.bouvet.no/design/system-diagrams-and-drawings/">design&lt;/a> for a new solution, there may be details we do not know, or unexpected complications may arise during implementation. This can result in the original design deviating from the final solution.&lt;/p>
&lt;p>Documentation is crucial for understanding how a solution is set up and how it works, especially if an incident occurs that requires redeployment or disaster recovery. To ensure that the gap between documentation and the final product is not too large, we should always validate the design afterward.&lt;/p></description></item><item><title>Audit or Review of Project or Delivery</title><link>https://sikkerhet.bouvet.no/manage/audit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/manage/audit/</guid><description>&lt;p>Not all deliveries are subject to audits or reviews from the customer&amp;rsquo;s side. This typically applies to deliveries where Bouvet has taken the lead, and the customer receives a solution without being heavily involved in the project&amp;rsquo;s operations. An audit is a tool the customer can use to ensure that Bouvet has done the job as agreed, giving the customer the opportunity to review our routines and work processes to ensure we have delivered as expected.&lt;/p></description></item><item><title>Building</title><link>https://sikkerhet.bouvet.no/deploy/building/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/deploy/building/</guid><description>&lt;p>Building is often the first step in the process and is typically done only once per release. The build environments used in a CI/CD process, often called build agents, usually come in two forms:&lt;/p>
&lt;ul>
&lt;li>Cloud provider-managed agents&lt;/li>
&lt;li>Self-hosted agents - these can be hosted both in the cloud or on-premise&lt;/li>
&lt;/ul>
&lt;p>With cloud provider-managed agents, standard images pre-configured for this task are used. They are deployed when you start a build process and contain all the tools needed for building. Once deployed, they check out your source code, build it, store the artifact in a suitable system, and then the instance is stopped and deleted.&lt;/p></description></item><item><title>Data and Classification</title><link>https://sikkerhet.bouvet.no/plan/data-and-classification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/plan/data-and-classification/</guid><description>&lt;h2 id="classification">Classification&lt;a class="td-heading-self-link" href="#classification" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Most organizations have routines and processes for data classification, typically distinguishing between these or similar levels:&lt;/p>
&lt;ul>
&lt;li>Open&lt;/li>
&lt;li>Internal&lt;/li>
&lt;li>Confidential&lt;/li>
&lt;li>Restricted&lt;/li>
&lt;/ul>
&lt;p>Depending on this classification, there may be different requirements for securing data. Open data typically has no restrictions, while data classified as &amp;ldquo;restricted&amp;rdquo; may have limitations such as:&lt;/p>
&lt;ul>
&lt;li>strict requirements for access&lt;/li>
&lt;li>information can only be processed or stored in approved systems&lt;/li>
&lt;li>requires multi-factor authentication before access&lt;/li>
&lt;li>has restrictions regarding the use of cloud services or the geographical location of where data is stored&lt;/li>
&lt;/ul>
&lt;p>This needs to be clarified with the client at the start of the project to ensure compliance. If the client does not use data classifications, one should still assess the sensitivity of the data to be processed to ensure that necessary measures are implemented.&lt;/p></description></item><item><title>Secrets</title><link>https://sikkerhet.bouvet.no/develop/secrets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/develop/secrets/</guid><description>&lt;p>Secrets in development projects are represented as &lt;em>connection strings&lt;/em>, &lt;em>passwords&lt;/em>, &lt;em>keys&lt;/em>, &lt;em>certificates&lt;/em>, and any other sensitive information we do not want others to know about.&lt;/p>
&lt;p>There are many different approaches to handling these, and this has evolved as new services emerge. For cloud solutions, services like Azure Key Vault and similar have almost become standard, as these services handle multiple aspects of how to use and manage secrets.&lt;/p>
&lt;h2 id="basic-principles-for-handling-secrets">Basic Principles for Handling Secrets&lt;a class="td-heading-self-link" href="#basic-principles-for-handling-secrets" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>Secrets should never be hard-coded or checked into version control systems&lt;/li>
&lt;li>Verify compliance by scanning the code - reject commits with secrets and rotate them immediately!&lt;/li>
&lt;li>Keep track of which secrets you have and what access they provide&lt;/li>
&lt;li>Limit the lifetime of secrets - no secrets should live more than a year, passwords and keys much shorter&lt;/li>
&lt;li>Team members should not always have access to all secrets; elevate or provide access as needed&lt;/li>
&lt;/ul>
&lt;h1 id="cryptography-and-hashing">Cryptography and Hashing&lt;a class="td-heading-self-link" href="#cryptography-and-hashing" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Cryptography and hashing algorithms are complex topics, and it requires significant resources and &lt;em>a lot&lt;/em> of competence to build good algorithms that are secure. For this simple reason, you should &lt;strong>never&lt;/strong> create your own, no matter how clever and secure it seems to be.&lt;/p></description></item><item><title>Security Checklist</title><link>https://sikkerhet.bouvet.no/checklist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/checklist/</guid><description>&lt;p>It&amp;rsquo;s not a given that all points are relevant for every project, or that implementing all measures is desirable. Each team and delivery manager must assess cost/benefit and what responsibility and risk is assumed by not introducing measures. Security requires continuous work, so review the checklist regularly to see if there are measures that can or should be introduced so that nothing is overlooked.&lt;/p>
&lt;p>Download the checklist and implement it as part of the source code in your project!&lt;/p></description></item><item><title>System diagrams and drawings</title><link>https://sikkerhet.bouvet.no/design/system-diagrams-and-drawings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/design/system-diagrams-and-drawings/</guid><description>&lt;p>When designing a solution, it&amp;rsquo;s essential to have clear and comprehensive drawings and diagrams that show the planned design. This is already done by many development teams without necessarily being a formal requirement, but it&amp;rsquo;s still worth mentioning here.&lt;/p>
&lt;p>System diagrams should provide enough information to:&lt;/p>
&lt;ul>
&lt;li>Validate that the implementation matches the design&lt;/li>
&lt;li>Use them for threat modeling, pentesting, or similar activities&lt;/li>
&lt;li>Be used by those managing the solution to get a good overview of components and data flow&lt;/li>
&lt;li>Be used by the delivery team for onboarding new colleagues or handover to other teams&lt;/li>
&lt;/ul>
&lt;p>Although there is a lot that can be documented here, we focus on the most important aspects:&lt;/p></description></item><item><title>The Security Champion Role</title><link>https://sikkerhet.bouvet.no/security-champion/the-security-champion-role/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/security-champion/the-security-champion-role/</guid><description>&lt;p>Regardless of your background (developer, tester, project manager, etc.), points 1, 2, and 3 can be done by everyone.&lt;/p>
&lt;h2 id="1-create-awareness-in-the-delivery-team">1. Create Awareness in the Delivery Team&lt;a class="td-heading-self-link" href="#1-create-awareness-in-the-delivery-team" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>You can start by asking yourself a few questions:&lt;/p>
&lt;ul>
&lt;li>What does this project I am working on actually do?&lt;/li>
&lt;li>What is critical for the system to function?&lt;/li>
&lt;li>How can this system be misused, what attack surfaces exist in the system?&lt;/li>
&lt;li>Is there an updated threat model with corresponding measures to prevent the exploitation of weaknesses?&lt;/li>
&lt;/ul>
&lt;p>As you begin to create awareness, you can move on to find out more. Now you can start taking some initiative in your team.&lt;/p></description></item><item><title>Business Continuity</title><link>https://sikkerhet.bouvet.no/plan/business-continuity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/plan/business-continuity/</guid><description>&lt;p>&lt;em>Business Continuity Planning&lt;/em> is &lt;em>not&lt;/em> an IT-technical subject. But it is our responsibility as suppliers of an IT system to remind the customer that the system can become unavailable.
The answer from this planning will help describe the requirements for the solution&amp;rsquo;s robustness and security level, and is crucial for finding the right balance of cost and performance for the system.&lt;/p>
&lt;p>Here it is important to consider&lt;/p>
&lt;ul>
&lt;li>The criticality of the solution&lt;/li>
&lt;li>Possible workarounds if the solution is unavailable&lt;/li>
&lt;li>Consequences or extra work resulting from unavailability or when the solution becomes available again.&lt;/li>
&lt;/ul>
&lt;h2 id="customer-expectations">Customer Expectations&lt;a class="td-heading-self-link" href="#customer-expectations" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Do we have a Service Level Agreement with the customer that regulates uptime, availability, and similar, or does the customer have implicit expectations for this?&lt;/p></description></item><item><title>Contributing outside the team</title><link>https://sikkerhet.bouvet.no/security-champion/contributing-outside-the-team/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/security-champion/contributing-outside-the-team/</guid><description>&lt;h2 id="get-involved-with-regional-security-champions">Get Involved with Regional Security Champions&lt;a class="td-heading-self-link" href="#get-involved-with-regional-security-champions" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Most regions in Bouvet have their own Security Champions gatherings on a regular basis, where knowledge, tips, tricks, and much more are shared. Get involved here and help build a regional security culture in the developer teams!&lt;/p>
&lt;p>All developers should be familiar with the basic principles of security and secure development, but to achieve this, we need to go out among people and share knowledge. &lt;a href="en/develop/security_practices">OWASP Top 10&lt;/a> is always relevant, so if you feel like it - set up a session with colleagues in the surrounding units. You can make it super fancy and run demos of every single point, but you can just as easily make it low-threshold and simply talk through the points.&lt;/p></description></item><item><title>Data Validation</title><link>https://sikkerhet.bouvet.no/develop/data-validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/develop/data-validation/</guid><description>&lt;p>If you receive input from users or fetch data from other systems, you should never blindly trust it. OWASP Top 10 has listed various forms of vulnerabilities related to code injection at the top of their lists since the first one was published in 2004.&lt;/p>
&lt;p>Ensure that the data contains what you expect; if you import files, they must be scanned for malware before processing them further. Also, consider the need for using sandbox environments to process such files to limit the damage potential.&lt;/p></description></item><item><title>Deploy</title><link>https://sikkerhet.bouvet.no/deploy/deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/deploy/deploy/</guid><description>&lt;p>When setting up runtime environments, it is important to consider how the solution we are developing can be built and deployed to these in a way that makes it easy and removes the need for a person to spend time and energy doing the same thing each time.&lt;/p>

&lt;figure>
 &lt;img src="../cicd.png"/> 
&lt;/figure>

&lt;p>When deploying an application, you start with the artifact that was built, which is then uploaded to the desired runtime environment. To ensure consistency, it is common to build only once so that the same artifact is deployed to multiple locations - if the environments are the same and the artifact is the same, we should see the same result everywhere.&lt;/p></description></item><item><title>Logging and Monitoring</title><link>https://sikkerhet.bouvet.no/manage/logging-monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/manage/logging-monitoring/</guid><description>&lt;p>Regardless of where a solution is deployed, we should ensure that it is monitored. Even if it is only available on the intranet with only internal users working from approved devices over VPN, logging information is important if one of these is compromised. A typical DevOps team will collect some information to help debug the application&amp;rsquo;s functionality, but we also need other information to assess the security context around it.&lt;/p></description></item><item><title>Security Practices</title><link>https://sikkerhet.bouvet.no/develop/security-practices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/develop/security-practices/</guid><description>&lt;p>There are many different types of vulnerabilities and weaknesses to consider when developing new applications. The Open Worldwide Application Security Project (OWASP) has published a list of the 10 most common types of vulnerabilities since 2004, primarily aimed at web applications. Although this list does not cover everything, it is often used as a starting point for vulnerabilities that must be addressed in development projects.&lt;/p>
&lt;h2 id="current-points-on-the-owasp-top-10">Current Points on the OWASP Top 10:&lt;a class="td-heading-self-link" href="#current-points-on-the-owasp-top-10" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>Broken Access Control&lt;/li>
&lt;li>Cryptographic Failures&lt;/li>
&lt;li>Injection&lt;/li>
&lt;li>Insecure Design&lt;/li>
&lt;li>Security Misconfiguration&lt;/li>
&lt;li>Vulnerable and Outdated Components&lt;/li>
&lt;li>Identification and Authentication Failures&lt;/li>
&lt;li>Software and Data Integrity Failures&lt;/li>
&lt;li>Security Logging and Monitoring Failures&lt;/li>
&lt;li>Server-Side Request Forgery&lt;/li>
&lt;/ol>
&lt;p>If the team has no processes around secure development, this would be a good start. For teams with greater maturity in application security, other checklists, such as the Application Security Verification Standard - also from OWASP, are a further option. This is divided into three different levels; level 1 covers the main points and requires only general competence, while level 3 goes more in-depth and requires specific competence and support tools.&lt;/p></description></item><item><title>Segregation of Environments</title><link>https://sikkerhet.bouvet.no/design/segregation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/design/segregation/</guid><description>&lt;p>When we build solutions, we often set up multiple environments, typically for dev, test, and prod, so that we can develop while the product owner tests new functionality and end users use the system in prod. It is important to distinguish between these environments to avoid situations where changes in one environment affect the use of another.&lt;/p>
&lt;p>When designing a new solution, we must consider how to separate the environments. For cloud services, a common approach is to use different subscriptions per environment where possible. One subscription cannot affect another unless explicitly configured, but there are other possibilities as well.&lt;/p></description></item><item><title>Authentication and Authorization</title><link>https://sikkerhet.bouvet.no/design/authentication-and-authorization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/design/authentication-and-authorization/</guid><description>&lt;p>Authentication and authorization are crucial in all development projects. In short, &lt;em>authentication&lt;/em> is about validating that a user represents the identity they claim to represent, typically by checking a username and corresponding password. &lt;em>Authorization&lt;/em> is about checking that the user is allowed to do what they are trying to do. These are often abbreviated to &lt;em>authn&lt;/em> for authentication and &lt;em>authz&lt;/em> for authorization.&lt;/p>
&lt;h2 id="authentication">Authentication&lt;a class="td-heading-self-link" href="#authentication" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>When validating a user, the most important thing is to &lt;em>not&lt;/em> create your own authentication solution! Ensuring that such solutions are actually secure is a huge task, and one should instead use established solutions for this!&lt;/p></description></item><item><title>Dependency Management</title><link>https://sikkerhet.bouvet.no/manage/dependency-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/manage/dependency-management/</guid><description>&lt;p>When the team is in maintenance mode, most of the issues mentioned in the article on &lt;a href="https://sikkerhet.bouvet.no/develop/software-supply-chain/">Software Supply Chain&lt;/a> still apply. You will encounter situations where:&lt;/p>
&lt;ul>
&lt;li>A critical vulnerability is discovered in a package you use&lt;/li>
&lt;li>Packages are deprecated and replaced with something new that is not directly compatible with the old&lt;/li>
&lt;li>Developers behind packages stop maintaining them&lt;/li>
&lt;li>Malicious actors take over a package and use it to spread malware&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;.and certainly other scenarios that result in you needing to do &lt;em>something&lt;/em>. To ensure that packages hitting one or more of the points above are addressed, tools like Sonatype and others offer the ability to monitor various stages of the lifecycle, with the option to alert you when vulnerabilities or other events affecting quality occur.&lt;/p></description></item><item><title>Network Concepts</title><link>https://sikkerhet.bouvet.no/design/networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/design/networking/</guid><description>&lt;p>Proper configuration of the network is important for pure cloud solutions, hybrid networks, and on-prem solutions. Network is a vast field with significant variations in usage, security, and complexity. Below we cover basic concepts for communication to and from servers and network services.&lt;/p>
&lt;h2 id="zero-trust-architecture">Zero Trust Architecture&lt;a class="td-heading-self-link" href="#zero-trust-architecture" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Zero_trust_security_model">Zero trust&lt;/a> is an important concept in network operations. In short, you should never trust anything coming from other systems, and you should assume that all communication will be compromised. Zero trust cannot be solved just by securing the network, but must be a goal in itself when designing solutions and the infrastructure around them. By implementing zero-trust, you will eliminate many potential attack vectors and thus protect the services that use the network.&lt;/p></description></item><item><title>Penetration Testing</title><link>https://sikkerhet.bouvet.no/deploy/pentesting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/deploy/pentesting/</guid><description>&lt;p>&lt;a href="https://sikkerhet.bouvet.no/develop/security-testing/">Security testing&lt;/a> and pentesting have many similarities, but while approaches like DAST primarily focus on web applications and more automated tests, a pentest is more comprehensive and typically also includes underlying infrastructure and networks. In some cases, it may also have a physical element where pentesters will attempt to gain access to premises to uncover weaknesses in physical security or routines.&lt;/p>
&lt;p>A penetration test will &lt;em>always&lt;/em> have an agreed scope that regulates what the pentesters can do, when they can do it, and which resources and services they can test.&lt;/p></description></item><item><title>Tools Used in Deliveries</title><link>https://sikkerhet.bouvet.no/plan/tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/plan/tools/</guid><description>&lt;p>All development teams use various tools in the development process, and the selection will vary from team to team depending on personal preferences, technology choices, system and customer requirements, and much more.&lt;/p>
&lt;p>A typical team will use some form of&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Integrated_development_environment">IDE&lt;/a>&lt;/li>
&lt;li>a version control system for the code, typically &lt;em>git&lt;/em>&lt;/li>
&lt;li>a tool for &lt;a href="https://sikkerhet.bouvet.no/deploy/cicd/">CI/CD&lt;/a> that can perform various tasks related to building, testing, or deployment&lt;/li>
&lt;li>other services managed or consumed by the team, e.g., messaging services, file transfer services, or similar&lt;/li>
&lt;/ul>
&lt;p>These tools can significantly impact security and quality in deliveries, so it is important that the team considers how these are configured.&lt;/p></description></item><item><title>Preparedness</title><link>https://sikkerhet.bouvet.no/manage/preparedness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/manage/preparedness/</guid><description>&lt;p>If the team has done everything right so far, you have a &lt;a href="https://sikkerhet.bouvet.no/plan/business-continuity/">disaster recovery plan&lt;/a> that tells you what needs to be done to restore infrastructure, applications, and data to return to normal operations.&lt;/p>
&lt;p>The reasons for needing to restore can be many and vary greatly in scope. Who hasn&amp;rsquo;t run a &lt;code>delete from &amp;lt;table&amp;gt; where x = 'something'&lt;/code> with missing or incorrect parameters, or dropped the wrong table from a database? Or deleted a server or app service from a prod environment by mistake (&lt;em>I was just trying to fix something quickly&amp;hellip;&lt;/em>). In such cases, recovery can be quick if you know what went wrong, but in other and more complex cases, such as involving unknown software errors or problems with a cloud service provider, it can be more complicated.&lt;/p></description></item><item><title>Security Checkpoints</title><link>https://sikkerhet.bouvet.no/plan/security-checkpoints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/plan/security-checkpoints/</guid><description>&lt;p>Depending on the security level a delivery aims to achieve, it may be necessary to define mechanisms for assessing security at fixed points in the development cycle, known as security checkpoints.&lt;/p>
&lt;p>These can be defined between logical phases in the project, for example, between the design and development phases, or when transitioning from development to the first release in production. Other and additional checkpoints can also be defined, entirely depending on the requirements the delivery team must adhere to.&lt;/p></description></item><item><title>Software Supply Chain</title><link>https://sikkerhet.bouvet.no/develop/software-supply-chain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/develop/software-supply-chain/</guid><description>&lt;p>When we build software, we depend on a multitude of different third-party packages from ecosystems like npmjs, nuget, PyPi, or others. This is code &amp;ldquo;written by others,&amp;rdquo; where we rely on these producing packages without major weaknesses and without malicious intent. Sources such as Gartner, Sonatype, and Snyk have estimated that as much as 90% of the code in a typical development project may consist of such third-party packages, so the risk is significant if we do not have control.&lt;/p></description></item><item><title>Threat Modeling</title><link>https://sikkerhet.bouvet.no/design/threat-modelling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/design/threat-modelling/</guid><description>&lt;p>&lt;strong>This is a brief introduction to threat modeling, data flow diagrams, STRIDE, and attack trees.&lt;/strong>&lt;/p>
&lt;p>You may have already done simple threat modeling without realizing it. For example, have you ever thought about why the users of the system you&amp;rsquo;re creating need to log in with a username and password?&lt;/p>
&lt;p>When these choices were made, you automatically performed simple threat modeling. You certainly don&amp;rsquo;t want unauthorized individuals to access data in your system, and you don&amp;rsquo;t want anyone to see the data transferred between your users and your website.&lt;/p></description></item><item><title>Competence Building</title><link>https://sikkerhet.bouvet.no/design/competence-building/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/design/competence-building/</guid><description>&lt;p>Security is an unknown and perhaps somewhat intimidating area for many, where they don&amp;rsquo;t quite know where to start. Therefore, when a new project is initiated, it is important to assess the need for competence building among team members. Initially, this is aimed at topics related to security, but the use of new technology can also pose a risk if used incorrectly.&lt;/p>
&lt;p>It is important that the team reviews the entire development process in all phases and evaluates each point against what the team knows, what is relevant for the project, and where assistance can be obtained.&lt;/p></description></item><item><title>Contingency Plans and Incident Management</title><link>https://sikkerhet.bouvet.no/manage/incident-response/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/manage/incident-response/</guid><description>&lt;p>Many people think of security incidents as targeted attacks where &lt;em>someone&lt;/em> attacks a solution by &lt;em>hacking&lt;/em> it. In some cases, this may be correct, but an incident can be much more.&lt;/p>
&lt;p>NSM defines a security incident as &lt;em>&amp;ldquo;A deviation situation where there is a potential for loss of confidentiality, integrity, and/or availability of information or ICT services. A security incident can occur as a result of a data attack, technical failure, or unintentional errors.&amp;rdquo;&lt;/em> In other words, an incident can be almost anything that affects confidentiality, integrity, and availability, and depending on the context, different customers will have different requirements for when we need to report and/or act on this.&lt;/p></description></item><item><title>Documentation</title><link>https://sikkerhet.bouvet.no/develop/documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/develop/documentation/</guid><description>&lt;p>Documentation is often seen as a necessary evil, and we are not always good enough at documenting our projects. Many believe that the source code is the best documentation, but it only says how an application works, not necessarily why it works the way it does, or what the actual intention is.&lt;/p>
&lt;p>There are many reasons why we need to document the solution we are building; the most obvious is to ensure that new team members can understand what the project is about and also to ensure that information does not only live in the heads of individuals. Another important aspect of this is the documentation concerning the security of the project. If we do not document what measures are taken and why, or what threats we face and how we handle them, we place a huge responsibility on the team members who come after us: What seems like a logical and reasonable solution given a security context can seem backward and cumbersome to someone without the same context and competence, and we risk that important measures are removed to &lt;em>simplify&lt;/em> the solution - at the expense of security.&lt;/p></description></item><item><title>Internal Components</title><link>https://sikkerhet.bouvet.no/develop/internal-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/develop/internal-components/</guid><description>&lt;p>Many development teams do more than just write code. You might have virtual machines in the cloud or on-premise, with applications or services used in the delivery to the customer. You may manage integration solutions for the customer, containers, application servers, and much more.&lt;/p>
&lt;p>Do you have a routine for keeping these updated, and are they part of the overall security efforts?&lt;/p>
&lt;h2 id="important-reminders">Important Reminders&lt;a class="td-heading-self-link" href="#important-reminders" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="updates">Updates&lt;a class="td-heading-self-link" href="#updates" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>If you manage servers, services, or other assets within the team, they must be kept up to date. You need to familiarize yourself with the release routines for new versions from the supplier&amp;rsquo;s side so that you can keep everything updated. It&amp;rsquo;s not always desirable to go for the latest version all the time, so it&amp;rsquo;s important to read the release notes or other documentation about the release to understand why it came out and what it solves.&lt;/p></description></item><item><title>Security Testing</title><link>https://sikkerhet.bouvet.no/develop/security-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/develop/security-testing/</guid><description>&lt;p>Security testing should always be an element of all deliveries. Many associate security testing with penetration testing, but it is much more than that. Some forms of testing can be done automatically as part of CICD, while others are more manual and typically performed against a deployed solution.&lt;/p>
&lt;p>Before starting security testing, it is important to understand what it can provide you - there is no single measure that solves all security problems, and no single test method that uncovers all weaknesses. Security testing is also one of the areas that often require specific expertise for the results to be good and/or interpreted correctly.&lt;/p></description></item><item><title>Content Guidelines</title><link>https://sikkerhet.bouvet.no/content-guidelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/content-guidelines/</guid><description>&lt;p>Since everything written on this site is freely available on the Internet, it&amp;rsquo;s important to follow some simple rules and guidelines for content.&lt;/p>
&lt;h2 id="language-and-style">Language and Style&lt;a class="td-heading-self-link" href="#language-and-style" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>The content on these pages is primarily for technicians, so technical language is to be expected. However, if terms are used that cannot be assumed to be well known, they must be explained. The language should be readable and understandable by most technicians, not just those who have worked with security for decades!&lt;/p></description></item><item><title>Search Results</title><link>https://sikkerhet.bouvet.no/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/search/</guid><description/></item><item><title>Who Can Help?</title><link>https://sikkerhet.bouvet.no/index3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sikkerhet.bouvet.no/index3/</guid><description>&lt;h1 id="help-im-stuck---who-can-help">Help, I&amp;rsquo;m Stuck - Who Can Help?&lt;a class="td-heading-self-link" href="#help-im-stuck---who-can-help" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Bouvet is a growing company with many units across various regions, each focusing on different areas. If you need more in-depth expertise or help getting started with application security, it might be helpful to reach out to other colleagues for valuable input.&lt;/p>
&lt;p>If you have general questions, the &lt;code>#sikkerhet&lt;/code> channel on Slack is a great place to start. There, you&amp;rsquo;ll connect with many skilled colleagues with diverse backgrounds and expertise on most topics covered on &lt;strong>sikkerhet.bouvet.no&lt;/strong>.&lt;/p></description></item></channel></rss>