<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deploye on sikkerhet.bouvet.no</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/</link><description>Recent content in Deploye on sikkerhet.bouvet.no</description><generator>Hugo</generator><language>no</language><atom:link href="https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/index.xml" rel="self" type="application/rss+xml"/><item><title>CI/CD</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/cicd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/cicd/</guid><description>&lt;p>Når vi setter opp kjøremiljøer er det viktig å også tenke på hvordan løsningen vi utvikler kan bygges og deployes til disse på en måte som både gjør det enkelt og fjerner behovet for at en person skal måtte bruke tid og energi på å gjøre det samme hver gang.&lt;/p>

&lt;figure>
 &lt;img src="../cicd.png"/> 
&lt;/figure>

&lt;h2 id="bruk-av-cicd">Bruk av CI/CD&lt;a class="td-heading-self-link" href="#bruk-av-cicd" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Continuous Integration og Continuous Delivery, ofte forkortet CI/CD er vanlige tilnærminger for hvordan software bygges og deployes til kjøremiljø, ofte ved hjelp av skript i form av pipelines eller actions. Navn og begreper her avhenger av hvilke verktøy en bruker, men prinsippet er mye det samme.&lt;/p></description></item><item><title>Bygging</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/bygg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/bygg/</guid><description>&lt;p>Bygging er ofte det første steget i prosessen, og gjøres typisk bare en gang per release. Byggmiljøene brukt i en CI/CD prosess, ofte kalt byggagenter kommer ofte i to former:&lt;/p>
&lt;ul>
&lt;li>skyleverandørstyrte agenter&lt;/li>
&lt;li>selvstyrte agenter - disse kan hostes både i sky eller on-premise&lt;/li>
&lt;/ul>
&lt;p>Med agenter styrt av skyleverandøren brukes standardimages ferdig konfigurert for denne oppgaven. De deployes når du starter en byggeprosess, og inneholder alt av verktøy som trengs for byggingen. Når de er ferdig deployet sjekker de ut kildekoden din, bygger den, lagrer artifakten i et egnet system før instansen stanses og slettes.&lt;/p></description></item><item><title>Deployering</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/deploy/</guid><description>&lt;p>Når vi setter opp kjøremiljøer er det viktig å også tenke på hvordan løsningen vi utvikler kan bygges og deployes til disse på en måte som både gjør det enkelt og fjerner behovet for at en person skal måtte bruke tid og energi på å gjøre det samme hver gang.&lt;/p>

&lt;figure>
 &lt;img src="../cicd.png"/> 
&lt;/figure>

&lt;p>Når en deployerer en applikasjon tar man utgangspunkt i artifakten som ble bygget, som så lastes opp til ønsket kjøremiljø. For å sikre konsistens er det vanlig å bare bygge en gang, slik at man deployer det samme artifaktet flere steder - dersom miljøene er like og artifaktet er det samme, skal vi se det samme overalt.&lt;/p></description></item><item><title>Penetrasjonstesting</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/pentesting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/deploye/pentesting/</guid><description>&lt;p>&lt;a href="https://chrish.github.io/sikkerhet.bouvet.no/sikkerhet.bouvet.no/no/utvikle/sikkerhetstesting/">Sikkerhetstesting&lt;/a> og pentesting har mange fellestrekk, men der tilnærminger som DAST primært fokuserer på webapplikasjoner og mer automatiserte tester, vil en pentest være mer omfattende og typisk også inkludere underliggende infrastruktur og nettverk. I noen tilfeller vil den også kunne ha et fysisk element der pentesterne vil forsøke å komme seg inn i lokalene for å avdekke svakheter ved fysisk sikring eller rutiner.&lt;/p>
&lt;p>En penetrasjonstest vil &lt;em>alltid&lt;/em> ha et avtalt omfang som regulerer hva pentesterne kan gjøre, når de kan gjøre det og hvilke ressurser og tjenester de kan teste.&lt;/p></description></item></channel></rss>