<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design on Sikkerhet.bouvet.no - For Security Champions i Bouvet</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/</link><description>Recent content in Design on Sikkerhet.bouvet.no - For Security Champions i Bouvet</description><generator>Hugo</generator><language>no</language><atom:link href="https://chrish.github.io/sikkerhet.bouvet.no/no/designe/index.xml" rel="self" type="application/rss+xml"/><item><title>Sikkerhetskrav</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/sikkerhetskrav/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/sikkerhetskrav/</guid><description>&lt;p>Noen krav er implisitte, som eksempelvis bruk av HTTPS/TLS, mens andre vil være eksplisitte og definert av lovverk, kunde eller tredjepart. Dersom kunden ikke har noen spesifikke krav er det likevel viktig at leveranseteamet lager en kravliste slik at rammene for prosjektet er dokumentert.&lt;/p>
&lt;p>De fleste prosjekter må forholde seg til ulike krav fra Bouvet, kunden og eksterne parter. Alle utviklingsteam må ha kontroll på hvilke krav som stilles til leveransen:&lt;/p></description></item><item><title>Nettverkskonsepter</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/nettverk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/nettverk/</guid><description>&lt;p>Nettverk er en grunnleggende komponent i alt vi lager, og det er viktig med en grunnleggende forståelse for hvordan dette fungerer og hvordan det kan utnyttes av andre.&lt;/p>
&lt;p>Riktig konfigurasjon av nettverk er viktig for både rene skyløsninger, hybride nettverk og rene on-prem-løsninger. Nettverk er et stort fagfelt, med store variasjoner i bruksområde, sikkerhet og kompleksitet. Under dekker vi grunnleggende konsepter for kommunikasjon til og fra servere og nettjenester.&lt;/p>
&lt;h2 id="zero-trust-arkitektur">Zero trust arkitektur&lt;a class="td-heading-self-link" href="#zero-trust-arkitektur" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Zero_trust_security_model">Zero trust&lt;/a> er et viktig konsept innen nettverksdrift. Kort fortalt så skal man aldri stole på noe som kommer fra andre systemer, og du skal anta at all kommunikasjon vil bli kompromittert. Zero trust kan ikke løses bare ved å sikre nettverket, men må være et mål i seg selv når en designer løsninger og infrastrukturen rundt disse. Ved å implementere zero-trust vil du fjerne mange potensielle angrepsvektorer og dermed beskytte tjenestene som benytter nettverket.&lt;/p></description></item><item><title>Systemskisser</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/systemskisser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/systemskisser/</guid><description>&lt;p>Når vi designer en løsning, er det viktig med gode og oversiktlige skisser og diagrammer som viser designet slik at det planlagt. Dette gjøres allerede av mange utviklerteam uten at det nødvendigvis stilles krav til det, men det er likevel greit å nevne her.&lt;/p>
&lt;p>Systemskissene bør gi nok informasjon til at en i etterkant kan&lt;/p>
&lt;ul>
&lt;li>Validere at implementasjonen er som designet&lt;/li>
&lt;li>Bruke dem ifm trusselmodellering, pentesting eller liknende&lt;/li>
&lt;li>Brukes av den/de som forvalter løsningen for å få en god oversikt over komponenter og dataflyt&lt;/li>
&lt;li>Brukes av leveranseteamet for onboarding av nye kollegaer eller handover til andre team.&lt;/li>
&lt;/ul>
&lt;p>Selv om det er mye som kan dokumenteres her, fokuserer vi bare på det viktigste her:&lt;/p></description></item><item><title>Segregering av miljø</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/segregering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/segregering/</guid><description>&lt;p>Når vi bygger løsninger setter vi ofte opp flere miljø, ofte for dev, test og prod slik at vi kan utvikle samtidig som at produkteier tester ny funksjonalitet og sluttbrukere bruker systemet i prod. Det er viktig at vi skiller mellom disse miljøene, slik at vi unngår å komme i situasjoner der endringer i ett miljø påvirker bruken av et annet.&lt;/p>
&lt;p>Når vi designer en ny løsning må vi derfor tenke på hvordan vi skiller mellom miljøene. For skytjenester er en vanlig tilnærming ofte å benytte seg av ulike subscriptions per miljø der dette er mulig. En subscription kan ikke påvirke en annen med mindre dette er eksplisitt satt opp, men det finnes andre muligheter også.&lt;/p></description></item><item><title>Autentisering og autorisering</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/autentisering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/autentisering/</guid><description>&lt;p>Autentisering og autorisering er viktig i alle utviklingsprosjekter. Kort fortalt går &lt;em>autentisering&lt;/em> ut på at en skal validere at en bruker representerer den identiteten den hevder å representere, typisk gjennom å sjekke brukernavn og tilhørende passord. &lt;em>Autorisering&lt;/em> går ut på å sjekke at brukeren har lov til å gjøre det den prøver på. Disse er ofte forkortet til &lt;em>authn&lt;/em> for autentisering og &lt;em>authz&lt;/em> for autorisering.&lt;/p>
&lt;h2 id="autentisering">Autentisering&lt;a class="td-heading-self-link" href="#autentisering" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Når en skal validere en bruker, er det viktigste at en &lt;em>ikke&lt;/em> lager en egen autentiseringsløsning! Å sikre at slike løsninger faktisk er sikre er en kjempejobb, og man bør istedet benytte seg av etablerte løsninger for dette!&lt;/p></description></item><item><title>Trusselmodellering</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/trusselmodellering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/trusselmodellering/</guid><description>&lt;p>&lt;strong>Dette er en kort introduksjon til trusselmodellering, dataflytdiagrammer, STRIDE og angrepstrær.&lt;/strong>&lt;/p>
&lt;p>Du har nok allerede gjort en enkel trusselmodellering uten at du selv er klar over det. Har du for eksempel tenkt på hvorfor brukerne av systemet du lager må logge seg inn med brukernavn og passord?&lt;/p>
&lt;p>Når disse valgene ble tatt så har du automatisk gjort en enkel trusselmodellering. Du ønsker jo selvfølgelig ikke at uvedkommende skal kunne få tilgang til data i systemet ditt og du ønsker ikke at hvem som helst skal se data som overføres mellom brukerne dine og nettstedet ditt.&lt;/p></description></item><item><title>Kompetanseheving</title><link>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/kompetanseheving/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/no/designe/kompetanseheving/</guid><description>&lt;p>Sikkerhet er for mange et ukjent og kanskje litt skummelt område, der en ikke helt vet hvor man skal begynne. Når et nytt prosjekt startes opp er det derfor viktig at en vurderer behovet for kompetanseheving hos teammedlemmene. I utgangspunktet er dette rettet mot tema relatert til sikkerhet, men bruk av ny teknologi kan også utgjøre en risiko dersom en bruker den på feil måte.&lt;/p>
&lt;p>Det er viktig at teamet ser over hele utviklingsløpet med alle fasene og vurderer hvert enkelt punkt opp mot hva teamet kan, hva en ser på som relevant for prosjektet og hvor en kan få bistand.&lt;/p></description></item></channel></rss>