<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deploy on sikkerhet.bouvet.no</title><link>https://chrish.github.io/sikkerhet.bouvet.no/deploy/</link><description>Recent content in Deploy on sikkerhet.bouvet.no</description><generator>Hugo</generator><language>en</language><atom:link href="https://chrish.github.io/sikkerhet.bouvet.no/deploy/index.xml" rel="self" type="application/rss+xml"/><item><title>CI/CD</title><link>https://chrish.github.io/sikkerhet.bouvet.no/deploy/cicd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/deploy/cicd/</guid><description>&lt;p>When setting up runtime environments, it is important to consider how the solution we are developing can be built and deployed in a way that makes it easy and removes the need for a person to spend time and energy doing the same thing each time.&lt;/p>

&lt;figure>
 &lt;img src="../cicd.png"/> 
&lt;/figure>

&lt;h2 id="using-cicd">Using CI/CD&lt;a class="td-heading-self-link" href="#using-cicd" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Continuous Integration and Continuous Delivery, often abbreviated as CI/CD, are common approaches for how software is built and deployed to runtime environments, often using scripts in the form of pipelines or actions. Names and terms here depend on the tools used, but the principle is much the same.&lt;/p></description></item><item><title>Building</title><link>https://chrish.github.io/sikkerhet.bouvet.no/deploy/building/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/deploy/building/</guid><description>&lt;p>Building is often the first step in the process and is typically done only once per release. The build environments used in a CI/CD process, often called build agents, usually come in two forms:&lt;/p>
&lt;ul>
&lt;li>Cloud provider-managed agents&lt;/li>
&lt;li>Self-hosted agents - these can be hosted both in the cloud or on-premise&lt;/li>
&lt;/ul>
&lt;p>With cloud provider-managed agents, standard images pre-configured for this task are used. They are deployed when you start a build process and contain all the tools needed for building. Once deployed, they check out your source code, build it, store the artifact in a suitable system, and then the instance is stopped and deleted.&lt;/p></description></item><item><title>Deploy</title><link>https://chrish.github.io/sikkerhet.bouvet.no/deploy/deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/deploy/deploy/</guid><description>&lt;p>When setting up runtime environments, it is important to consider how the solution we are developing can be built and deployed to these in a way that makes it easy and removes the need for a person to spend time and energy doing the same thing each time.&lt;/p>

&lt;figure>
 &lt;img src="../cicd.png"/> 
&lt;/figure>

&lt;p>When deploying an application, you start with the artifact that was built, which is then uploaded to the desired runtime environment. To ensure consistency, it is common to build only once so that the same artifact is deployed to multiple locations - if the environments are the same and the artifact is the same, we should see the same result everywhere.&lt;/p></description></item><item><title>Penetration Testing</title><link>https://chrish.github.io/sikkerhet.bouvet.no/deploy/pentesting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chrish.github.io/sikkerhet.bouvet.no/deploy/pentesting/</guid><description>&lt;p>&lt;a href="https://chrish.github.io/sikkerhet.bouvet.no/develop/security-testing/">Security testing&lt;/a> and pentesting have many similarities, but while approaches like DAST primarily focus on web applications and more automated tests, a pentest is more comprehensive and typically also includes underlying infrastructure and networks. In some cases, it may also have a physical element where pentesters will attempt to gain access to premises to uncover weaknesses in physical security or routines.&lt;/p>
&lt;p>A penetration test will &lt;em>always&lt;/em> have an agreed scope that regulates what the pentesters can do, when they can do it, and which resources and services they can test.&lt;/p></description></item></channel></rss>